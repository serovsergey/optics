# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type Accountant {
  date: DateTime
  history: [AccountantHistory!]
  value: Employee
}

type AccountantHistory {
  date: DateTime
  value: Employee
}

type Appearance {
  color: Color
  productId: Int!
  weight: Int
}

input AppearanceInput {
  colorId: Int
  weight: Int
}

type Color {
  id: Int!
  name: String!
}

type CompanyName {
  date: DateTime
  value: String
}

type Constants {
  accountant: Accountant
  companyName: CompanyName
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

type Employee {
  createdAt: DateTime!
  description: String
  id: Int!
  isFolder: Boolean!
  name: String!
  parentId: Int
  updatedAt: DateTime!
}

type EmployeeResult {
  childrenCount: Int!
  createdAt: DateTime!
  description: String
  id: Int!
  isFolder: Boolean!
  name: String!
  parentId: Int
  updatedAt: DateTime!
}

"""
The `JSON` scalar type represents JSON values as specified by [ECMA-404](http://www.ecma-international.org/publications/files/ECMA-ST/ECMA-404.pdf).
"""
scalar JSON

type LensParams {
  diameter: Int
  index: Float
  productId: Int!
}

input LensParamsInput {
  diameter: Int
  index: Float
}

input ListOptions {
  orderBy: JSON
  skip: Float
  take: Float
  where: JSON
}

type Mutation {
  createProduct(data: ProductCreateInput!): Product!
  deleteAccountantHistoryRecord(date: DateTime!): Boolean!
  updateAccountant(date: DateTime, employeeId: Float!): AccountantHistory!
  updateCompanyName(value: String!): CompanyName!
}

type Product {
  appearance: Appearance
  createdAt: DateTime!
  description: String
  id: Int!
  isFolder: Boolean!
  lensParams: LensParams
  name: String!
  parentId: Int
  rimParams: RimParams
  updatedAt: DateTime!
}

input ProductCreateInput {
  appearance: AppearanceInput
  createdAt: DateTime
  description: String
  isFolder: Boolean!
  lensParams: LensParamsInput
  name: String!
  parentId: Int!
  rimParams: RimParamsInput
  updatedAt: DateTime
}

type ProductResult {
  appearance: Appearance
  childrenCount: Int!
  createdAt: DateTime!
  description: String
  id: Int!
  isFolder: Boolean!
  lensParams: LensParams
  name: String!
  parentId: Int
  rimParams: RimParams
  updatedAt: DateTime!
}

type Query {
  color(id: Int!): Color
  colors(options: ListOptions): [Color!]!
  constants(date: DateTime): Constants
  employee(id: Int!): EmployeeResult
  employees(options: ListOptions, parentId: Int): [EmployeeResult!]!
  health: String!
  product(id: Int!): ProductResult
  products(options: ListOptions, parentId: Int): [ProductResult!]!
}

type RimParams {
  bridge: Int
  height: Int
  productId: Float!
  shape: RimShape
  temple: Int
  width: Int
}

input RimParamsInput {
  bridge: Int
  height: Int
  shapeId: Int
  temple: Int
  width: Int
}

type RimShape {
  id: Int!
  name: String!
}